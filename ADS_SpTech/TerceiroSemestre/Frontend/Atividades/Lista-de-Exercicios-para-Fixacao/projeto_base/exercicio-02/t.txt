1. Contador Din√¢mico
Crie um componente de Contador, que conte de 1 at√© 30, com os seguintes comportamentos: 

Se o contador for entre 0 e 10, deve exibir "Voc√™ est√° longe de chegar ao 30".

Caso ele seja maior que 10 e menor que 20, deve exibir "Est√° quase l√°!".

Caso seja maior ou igual a 20 e menor que 30, deve exibir "Falta pouco, voc√™ consegue!"

Caso o contador tenha chegado em 30, deve deixar o bot√£o desabilitado e exibir a mensagem "Voc√™ chegou em 30 cliques, parab√©ns!".

OBS: Deve ter um bot√£o para incrementar a contagem e exibir o valor do contador abaixo do bot√£o. Por fim, exiba a frase espec√≠fica abaixo do contador.






2. Calculadora
Crie uma calculadora que realize as opera√ß√µes de adi√ß√£o (+), subtra√ß√£o (-), multiplica√ß√£o (√ó) e divis√£o (√∑).

A tela deve conter dois inputs para que o usu√°rio insira os valores a serem calculados.

Deve haver um campo de sele√ß√£o (select/option), onde o usu√°rio possa escolher a opera√ß√£o matem√°tica desejada (+, -, √ó, √∑).

Ap√≥s selecionar a opera√ß√£o e clicar no bot√£o "Calcular", o resultado deve ser exibido na tela, abaixo dos bot√µes.

üí° Dica: Para capturar o valor digitado pelo usu√°rio em um campo de input, utilize o atributo onChange.
Veja o exemplo abaixo:

<input onChange={(e) => console.log(e.target.value)} />
Neste caso, e.target.value representa o valor que o usu√°rio est√° digitando.






3. Di√°rio Interativo
Crie um di√°rio digital onde o usu√°rio possa escrever suas anota√ß√µes.

A interface deve conter um campo de texto (textarea) onde o usu√°rio pode escrever livremente.

O conte√∫do digitado deve ser salvo automaticamente para que, mesmo ap√≥s o recarregamento da p√°gina, o texto continue vis√≠vel.

Utilize o localStorage para armazenar as informa√ß√µes de forma persistente no navegador.

OBS: utilize useEffect para obter os valores do localStorage ao iniciar a p√°gina

OBS2: utilize useEffect para observar a altera√ß√£o do valor digitado e salvar no localStorage.






4. Contador Din√¢mico
Crie um sistema de lista telef√¥nica onde o usu√°rio possa cadastrar, visualizar e excluir contatos.

Requisitos:
A interface deve conter tr√™s campos de entrada para que o usu√°rio insira:
    - Nome
    - Sobrenome
    - Telefone

Ap√≥s preencher os campos, o usu√°rio poder√° clicar no bot√£o "Cadastrar" para adicionar o contato √† lista telef√¥nica.

A lista de contatos cadastrados deve ser exibida na tela.

Cada contato deve ter um bot√£o de "Excluir" para que possa ser removido da lista.






5. Exibir Personagens (dif√≠cil)
Voc√™ deve consumir a API do "Rick And Morty" para exibir a foto e as informa√ß√µes do personagem na tela.

Crie um componente que, ao ser carregado, fa√ßa a requisi√ß√£o para  API Rick & Morty 

Ap√≥s realizar a requisi√ß√£o √† API do Rick and Morty, armazene em um estado e exiba as informa√ß√µes sobre os personagens.
Exiba na tela a foto e o nome de cada personagem retornado pela API.